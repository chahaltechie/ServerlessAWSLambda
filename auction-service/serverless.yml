org: chahaltechie
app: auction-service-app
service:
  name: auction-service

plugins:
  - serverless-offline-local-authorizers-plugin
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: 'us-east-1'
  environment:
    AUCTIONS_TABLE_NAME: AuctionsTable-${self:provider.stage}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
  iamRoleStatements:
    - ${file(src/infrastructure/deployment/iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(src/infrastructure/deployment/iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    AuctionsTable: ${file(src/infrastructure/deployment/resources/AuctionsTable.yml):AuctionsTable}
  
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer:
            arn: ${self:custom.authorizer}
            localAuthorizer:
              name: "mylocalAuthProxyFn"
              type: "request"
#          authorizer: ${self:custom.authorizer}
          
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: POST
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}
  processAuction:
    handler: src/handlers/processAuction.handler
    events:
      - schedule: rate(1 minute)

# writing code here to get the output of the resource - AuctionTable name and arn... ref is a function and ! is used to call the function
# cf is for cloudformation:service name - stage . output variable name
#  we use $ for serverless framework variable e.g. ${self:provider.stage}. and hashtag # for pseudo parameters e.g. #{AWS::Region}
custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-auth0-authorizer-${self:provider.stage}-auth
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn} 
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn 
  bundle:
    linting: false
